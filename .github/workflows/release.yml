# .github/workflows/release.yml
name: Build & Release Mod

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: write  # needed to create/update releases

jobs:
  build:
    name: Build (all pushes)
    runs-on: windows-latest
    # run this job for pushes to main or to any v* tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 7
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Restore & build
        run: |
          dotnet clean
          dotnet restore
          dotnet build --configuration Release
        shell: pwsh

  release:
    name: Publish Release (tags only)
    runs-on: windows-latest
    needs: build
    # only run this job when the ref is a tag (i.e. refs/tags/v*)
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 7
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Restore & build
        run: |
          dotnet clean
          dotnet restore
          dotnet build --configuration Release
        shell: pwsh

      - name: Package mod ZIP
        run: |
          $modName = 'GoldVault'
          $bin    = "$env:GITHUB_WORKSPACE\bin\Release\net7.0"
          $zip    = "$env:GITHUB_WORKSPACE\${modName}.zip"

          # ensure output exists
          New-Item -ItemType Directory -Path $bin -Force

          # copy manifest, config, docs, license alongside the DLL
          Copy-Item `
            "$env:GITHUB_WORKSPACE\manifest.json", `
            "$env:GITHUB_WORKSPACE\config.json", `
            "$env:GITHUB_WORKSPACE\README.md", `
            "$env:GITHUB_WORKSPACE\LICENSE.txt" `
            -Destination $bin -Force

          # zip everything for release
          Compress-Archive -Path "$bin\*" -DestinationPath $zip -Force
        shell: pwsh

      - name: Create or update GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name:   ${{ github.ref_name }}  # e.g. "v1.0.0"
          name:       ${{ github.ref_name }}  # release title
          draft:      false
          prerelease: false
          files: |
            bin/Release/net7.0/GoldVault.dll
            GoldVault.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
